# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  checkout_code:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    steps:
      - checkout
      - run:
          command: |
            mkdir ~/tmp
            for folder in `git log --format="" --name-only ${CIRCLE_COMPARE_URL##http*/} | cut -d"/" -f1 | sort -u`; do
              echo "$folder will be built in this run"
              touch ~/tmp/$folder.txt
            done
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/

  run_auth_build:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/auth.txt ]; then
              echo "[BUILDING] Auth"
              mvn clean install
            else
              echo "[SKIPPING] Auth"
            fi
          working_directory: auth
      - save_cache:
          paths:
            - auth/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-auth

  run_booking_build:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/booking.txt ]; then
              echo "[BUILDING] Booking"
              mvn clean install
            else
              echo "[SKIPPING] Booking"
            fi
          working_directory: booking
      - save_cache:
          paths:
            - booking/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-booking

  run_report_build:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/report.txt ]; then
              echo "[BUILDING] Report"
              mvn clean install
            else
              echo "[SKIPPING] Report"
            fi
          working_directory: report
      - save_cache:
          paths:
            - report/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-report

  run_room_build:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/room.txt ]; then
              echo "[BUILDING] Room"
              mvn clean install
            else
              echo "[SKIPPING] Room"
            fi
          working_directory: room
      - save_cache:
          paths:
            - room/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-room

  run_search_build:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/search.txt ]; then
              echo "[BUILDING] Search"
              mvn clean install
            else
              echo "[SKIPPING] Search"
            fi
          working_directory: search
      - save_cache:
          paths:
            - search/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-search

  run_ui_tests:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            if [ -f ~/tmp/ui.txt ]; then
              echo "[BUILDING] UI"
              npm install
              npm test
              npm run build
              cd ..
              cd api
              mvn install
            else
              echo "[SKIPPING] UI"
            fi
          working_directory: ui/js
      - save_cache:
          paths:
            - ui/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-ui

  build_auth_docker_image:

    docker:
      - image: circleci/openjdk:8u151-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-auth

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          command: |
            if [ -f ~/project/auth/target/restful-booker-platform-auth-*-SNAPSHOT.jar ]; then
              echo "[BUILDING] Auth"
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker build -t mwinteringham/restfulbookerplatform_auth:latest .
              docker push mwinteringham/restfulbookerplatform_auth:latest
            else
              echo "[SKIPPING] Auth"
            fi
          working_directory: auth

  build_booking_docker_image:

      docker:
        - image: circleci/openjdk:8u151-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-booking

        - setup_remote_docker:
            docker_layer_caching: true

        - run:
            command: |
              if [ -f ~/project/booking/target/restful-booker-platform-booking-*-SNAPSHOT.jar ]; then
                echo "[BUILDING] Booking"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_booking:latest .
                docker push mwinteringham/restfulbookerplatform_booking:latest
              else
                echo "[SKIPPING] Booking"
              fi
            working_directory: booking

  build_report_docker_image:

      docker:
        - image: circleci/openjdk:8u151-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-report

        - setup_remote_docker:
            docker_layer_caching: true

        - run:
            command: |
              if [ -f ~/project/report/target/restful-booker-platform-report-*-SNAPSHOT.jar ]; then
                echo "[BUILDING] Report"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_report:latest .
                docker push mwinteringham/restfulbookerplatform_report:latest
              else
                echo "[SKIPPING] Report"
              fi
            working_directory: report

  build_room_docker_image:

      docker:
        - image: circleci/openjdk:8u151-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-room

        - setup_remote_docker:
            docker_layer_caching: true

        - run:
            command: |
              if [ -f ~/project/room/target/restful-booker-platform-room-*-SNAPSHOT.jar ]; then
                echo "[BUILDING] Room"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_room:latest .
                docker push mwinteringham/restfulbookerplatform_room:latest
              else
                echo "[SKIPPING] Room"
              fi
            working_directory: room

  build_search_docker_image:

      docker:
        - image: circleci/openjdk:8u151-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-search

        - setup_remote_docker:
            docker_layer_caching: true

        - run:
            command: |
              if [ -f ~/project/search/target/restful-booker-platform-search-*-SNAPSHOT.jar ]; then
                echo "[BUILDING] Search"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_search:latest .
                docker push mwinteringham/restfulbookerplatform_search:latest
              else
                echo "[SKIPPING] Search"
              fi
            working_directory: search

  build_ui_docker_image:

        docker:
          - image: circleci/openjdk:8u151-jdk-node-browsers

        steps:
          - restore_cache:
              key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-ui

          - setup_remote_docker:
              docker_layer_caching: true

          - run:
              command: |
                if [ -f ~/project/ui/api/target/restful-booker-platform-ui-*-SNAPSHOT.jar ]; then
                  echo "[BUILDING] UI"
                  docker login -u $DOCKER_USER -p $DOCKER_PASS
                  docker build -t mwinteringham/restfulbookerplatform_ui:latest .
                  docker push mwinteringham/restfulbookerplatform_ui:latest
                else
                  echo "[SKIPPING] UI"
                fi
              working_directory: ui

  deploy_auth_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
            kubectl delete pod $(kubectl get pods | awk '/rbp-auth/ {print $1;exit}')

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - deploy_auth_docker_image
#      - checkout_code
#      - run_auth_build:
#          requires:
#            - checkout_code
#      - run_booking_build:
#          requires:
#            - checkout_code
#      - run_report_build:
#          requires:
#            - checkout_code
#      - run_room_build:
#          requires:
#            - checkout_code
#      - run_search_build:
#          requires:
#            - checkout_code
#      - run_ui_tests:
#          requires:
#            - checkout_code
#      - build_auth_docker_image:
#          requires:
#            - run_auth_build
#      - build_booking_docker_image:
#          requires:
#            - run_booking_build
#      - build_report_docker_image:
#          requires:
#            - run_report_build
#      - build_room_docker_image:
#          requires:
#            - run_room_build
#      - build_search_docker_image:
#          requires:
#            - run_search_build
#      - build_ui_docker_image:
#          requires:
#            - run_ui_tests